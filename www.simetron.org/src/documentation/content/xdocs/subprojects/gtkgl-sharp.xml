<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.2//EN" "http://apache.org/forrest/dtd/document-v12.dtd">
<document> 
  <header> 
    <title>GtkGL#</title> 
  </header> 
  <body> 
    	<section>
		<title>Introduction (the Gtk side)</title>
<p>GtkGL# is a library that allows to use OpenGL from Gtk# components.
It is currently in very alpha state, so use it as your own risk.
I am posting it so that people can play with it ...</p>
 
<p>I needed to be able to draw OpenGL from my Gtk# programs, sort of the
same thing CsGL does for System.Windows.Forms.</p>
 
<p>I knew this was possible with Gtk+ in C, but not in C#. I
started with GtkGLExt, which allows to draw OpenGL from any Gtk widget,
and created C# bindings using Gtk# GAPI generator (excellent stuff!).
Unfortunately in order for GtkGLExt to allow drawing on any widget, it
intrudes the GtkWidget, GdkWindow and GdkPixmap APIs. In C this is fine,
but in C# it is not. This and some other complications with the interface
made me look for something else.</p>
 
<note>You can get gtkglext directly from <link href="http://gtkglext.sourceforge.net">sourceforge</link>, but it is normally available already in most Linux distributions.</note>
 
<p>GtkGLArea is a non-maintained C library that provides its own widget,
called GtkGLArea for drawing OpenGL on Gtk+. The widget works, but
unfortunately the latest version released, 1.99, has some bugs.
Creating C# bindings for GtkGLArea was straight forward after minor
changes to the API.</p>
 
<note>You can get get gtkglarea directly from the gnome CVS, or as a tarball also from Gnome's ftp. It normally available for most most Linux distributions, although if you RPM packaging be prepared for a dependency nightmare.</note>
	</section>
	<section>
	<title>Introduction (the OpenGL side)</title>
 
<p>It seems like OpenGL is one of the favorite native libraries for us
developers to bind :) On a quick search on Google I found:</p>
 
<ul>
<li>glgen, a module on mono's CVS - this is a very interesting library,
as it is automatically generated using's Gtk# GAPI. However, I could
not get the gears example to work on Mono 0.26.</li>
 
<li>MonoGLo, another C# binding, more .NET style. Available in SF.NET.</li>
 
<li>CsGL, possibly the most used OpenGL bindings for .NET. However, it
does not support Mono and Linux yet (no glx), so I could not consider
it.</li>
 
<li>Tao, http://www.randyridge.com/tao/, which seems to be the most
complete. However, it is open-binary, not open-source. Sorry.</li>
 
<li>OpenGL-C#, http://www.colinfahey.com/opengl/csharp.htm, released
to the public domain by Colin Fahey. It is essentially a C# direct
mapping of the C library. I liked this, because it allows to quickly
port existing C OpenGL programs to C#. This is the library I am using.</li>
</ul>
	</section>
	<section>
		<title>Installation Requirements</title>
<ol>
<li>Download, make and install gtkglarea.</li>
<li>Tell mono where to find the gtkglarea shared library by modifying mono's config. Make sure that
the library is accessible to the mono runtime (LD_LIBRARY_PATH).</li>
<li>Double check that you have the GL and GLU libraries installed as
libGL.so and libGLU.so</li>
</ol>
	</section> 
	<section>
		<title>Download</title>
			<p>You can download the latest binary release of GtkGL# from <link href="http://developer.berlios.de/project/showfiles.php?group_id=1018">berliOS</link>. Alternatively, you can download the sources directly from <link href="../cvs.html">CVS</link>.</p>
	</section>
	<section>
		<title>Building</title>
<p>The tarball comes with pre-built binaries. You can also use the provided
makefiles, but bear with me because I have not ensured that it will
work on all platforms.</p>
	</section> 
	<section>
		<title>Future Plans</title>
	<p>I am thinking currently about creating a Gtk# component, only in C#, that
would not require the gtkglarea C library, but only pure .NET assemblies:
Gtk# and OpenGl#. Doing this is not straight forward, because I need to
expose some interesting Gtk+ methods to get the X-Window id or Win32
handle, but this will surely be a lot of fun.</p>
	</section>
	<section>
		<title>Bugs and Patches</title> 
	<p>Please use our <link href="../bugzilla.html">bug database</link> to post bugs and patches. You can also post your questions in our <link href="../lists.html">mailing list</link>.</p>
    	</section>
  </body>
</document>
