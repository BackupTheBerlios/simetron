// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GdkGL {

	using System;

	using System.Collections;
	using System.Runtime.InteropServices;

		/// <summary> Context Opaque Struct</summary>
		/// <remarks>
		/// </remarks>
#region Autogenerated code
	public class Context : GLib.Opaque {

		[DllImport("gtkgl")]
		static extern IntPtr gdk_gl_context_share_new(IntPtr visual, IntPtr sharelist, int direct);

		/// <summary> ShareNew Method </summary>
		/// <remarks> To be completed </remarks>
		public static GdkGL.Context ShareNew(Gdk.Visual visual, GdkGL.Context sharelist, int direct) {
			IntPtr raw_ret = gdk_gl_context_share_new(visual.Handle, sharelist.Handle, direct);
			GdkGL.Context ret = (GdkGL.Context) GLib.Opaque.GetOpaque(raw_ret);
			if (ret == null) ret = new GdkGL.Context(raw_ret);
			return ret;
		}

		[DllImport("gtkgl")]
		static extern IntPtr gdk_gl_context_attrlist_share_new(int attrlist, IntPtr sharelist, int direct);

		/// <summary> AttrlistShareNew Method </summary>
		/// <remarks> To be completed </remarks>
		public static GdkGL.Context AttrlistShareNew(int attrlist, GdkGL.Context sharelist, int direct) {
			IntPtr raw_ret = gdk_gl_context_attrlist_share_new(attrlist, sharelist.Handle, direct);
			GdkGL.Context ret = (GdkGL.Context) GLib.Opaque.GetOpaque(raw_ret);
			if (ret == null) ret = new GdkGL.Context(raw_ret);
			return ret;
		}

		[DllImport("gtkgl")]
		static extern void gdk_gl_context_unref(IntPtr raw);

		/// <summary> Unref Method </summary>
		/// <remarks> To be completed </remarks>
		public void Unref() {
			gdk_gl_context_unref(Handle);
		}

		[DllImport("gtkgl")]
		static extern IntPtr gdk_gl_context_ref(IntPtr raw);

		/// <summary> Ref Method </summary>
		/// <remarks> To be completed </remarks>
		public GdkGL.Context Ref() {
			IntPtr raw_ret = gdk_gl_context_ref(Handle);
			GdkGL.Context ret = (GdkGL.Context) GLib.Opaque.GetOpaque(raw_ret);
			if (ret == null) ret = new GdkGL.Context(raw_ret);
			return ret;
		}

		public Context(IntPtr raw) : base(raw) {}

		[DllImport("gtkgl")]
		static extern IntPtr gdk_gl_context_new(IntPtr visual);

		/// <summary> Context Constructor </summary>
		/// <remarks> To be completed </remarks>
		public Context(Gdk.Visual visual)
		{
			Raw = gdk_gl_context_new(visual.Handle);
		}

		protected Context() : base(){}

#endregion
	}

}
